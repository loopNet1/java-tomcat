# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence

workflow:
  rules:
  - if: $CI_COMMIT_BRANCH != "main" && $CI_PIPELINE_SOURCE != "merge_request_event"
    when: never
  - when: always

image: maven:3.8.6-jdk-11



stages:
- ".pre"
- pull
- build
- remove-d
- build-image
- test
- fuzz
- sast
- dast
- performance
- ".post"
include:
- template: Jobs/Code-Quality.gitlab-ci.yml
- local: Dependency-Scanning.gitlab-ci.yml
- template: Security/SAST.gitlab-ci.yml
- template: Jobs/License-Scanning.gitlab-ci.yml
- template: Security/Coverage-Fuzzing.gitlab-ci.yml
- template: Security/Container-Scanning.gitlab-ci.yml
- template: Security/DAST.gitlab-ci.yml
- template: Security/Secret-Detection.gitlab-ci.yml

".pre":
  stage: ".pre"
  script:
  - echo "pre stage"
  tags:
  - java_deploy

pull-code:
  stage: pull
  only:
  - main
  tags:
  - java_deploy
  script:
  - echo "preparing data and dependencies..."
  - pwd
  - ls

code_quality:
  stage: test
  variables:
    CODE_QUALITY_IMAGE: registry.gitlab.com/gitlab-org/ci-cd/codequality:latest
  allow_failure: true
  tags:
  - Docker_java_deploy

gemnasium-maven-dependency_scanning-and-gemnasium-gradle-dependency_scanning:
  tags:
  - java_deploy
  stage: test
  

dast:
  tags:
  - java_deploy
  script:
  - echo "Test OK"

.post:
  stage: .post
  script: 
    - echo "post stage"
  tags:
    - java_deploy        



SAST:
  tags:
  - java_deploy
  stage: test
  script:
  - echo "test the job..." 
    
spotbugs-sast:
  extends: .sast-analyzer
  image:
    name: "$SAST_ANALYZER_IMAGE"
  tags:
  - java_deploy
  variables:
    SAST_ANALYZER_IMAGE_TAG: 3
    SAST_ANALYZER_IMAGE: "$SECURE_ANALYZERS_PREFIX/spotbugs:$SAST_ANALYZER_IMAGE_TAG"
  rules:
    - if: $SAST_EXCLUDED_ANALYZERS =~ /spotbugs/
      when: never
    - if: $SAST_EXPERIMENTAL_FEATURES == 'true'
      exists:
        - '**/AndroidManifest.xml'
      when: never
    - if: $SAST_DISABLED
      when: never
    - if: $CI_COMMIT_BRANCH
      exists:
        - '**/*.xml'
        - '**/*.jsp'


variables:
  IMAGE: registry.gitlab.com/fineshift/java_deploy:latest
  DOCKERFILE_PATH: "$CI_PROJECT_DIR/Dockerfile"

build-code:
  stage: build
  only:
  - main
  tags:
  - java_deploy
  before_script:
  - echo "=======change permission ======="
  - chmod +x maveninstall.sh
  script:
  - echo "==== Project Building Started ====="
  - "./maveninstall.sh"
  - echo "code build Successfull..."
  - pwd
  when: on_success
  artifacts:
    paths:
    - target/*.war
    expire_in: 15 days

remove-old-docker:
  stage: remove-d
  only:
  - main
  tags:
  - java_deploy
  before_script:
  - echo "change permission of dockerrmf.sh"
  - chmod +x dockerrmf.sh
  script:
  - echo "Starting remove old docker image and container"
  - "./dockerrmf.sh"
  - echo "Removed all docker image and container"

build-docker-image:
  stage: build-image
  only:
  - main
  tags:
  - java_deploy
  needs:
  - build-code
  before_script:
  - chmod +x dockercmd.sh
  - echo "permission change"
  script:
  - "./dockercmd.sh"
  - echo "====Build And Deploy successfull.... ====="


  
  
